name: CI-CD

on: [push, pull_request]

jobs:

  CI:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python: ['3.6']  # add pypy3.6 here as soon as it's supported
    env:
      POETRY_VIRTUALENVS_CREATE: false
    steps:

      # setup python environment
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          architecture: 'x64'
      - uses: actions/checkout@v1
      - uses: dschep/install-poetry-action@v1.2
        with:
          version: 1.0.0b8

      # run CI pipeline
      - name: Installing package
        run: poetry install
      - name: Building package as artifact
        run: poetry build
      - name: Building documentation
        run: |
          sphinx-apidoc --no-toc --module-first -o docs/autodoc src/stenotype
          sphinx-build docs/ public/ -b html
      - name: Make sure the project is black
        run: black src/ tests/ --check
      - name: Static typing test with mypy
        run: mypy src/
      - name: Running test suite
        run: pytest tests/
      - name: Running test coverage
        run: pytest tests/ --cov
      - name: Test dependencies for known issues
        run: |
          poetry export -f requirements.txt > requirements.txt
          safety check -r requirements.txt
      - name: Test source code for potential exploits
        run: bandit -r src/

      # upload artifacts
      - uses: actions/upload-artifact@v1
        with:
          name: distributions
          path: dist
      - uses: actions/upload-artifact@v1
        with:
          name: documentation
          path: public

  CD:
    needs: [CI]
    runs-on: ubuntu-latest
    steps:

      - name: Location check
        run: echo "Currently on ${{ github.ref }}"

      # download docs artifacts and publish them
      - uses: actions/download-artifact@v1
        with:
          name: documentation
          path: public
      - name: Deploy docs to github pages
        if: github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v2.3.1
        env:
          PERSONAL_TOKEN: ${{ secrets.PAT }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: public

      # download packages and publish them
      - uses: actions/setup-python@v1
        with:
          python-version: '3'
          architecture: 'x64'
      - uses: actions/download-artifact@v1
        with:
          name: distributions
          path: dist
      - uses: dschep/install-poetry-action@v1.2
        with:
          version: 1.0.0b8
      - name: Deploy new package version to pypi
        if: github.ref == 'refs/heads/master'
        run: |
          echo "Here is where the code will be published once it actually does something."
          # poetry config repositories.github https://github.com/a-recknagel/stenotype/packages
          # poetry publish -r github -u ${{ secrets.GITHUB_TOKEN }} -p ${{ secrets.GITHUB_TOKEN }} artifacts/packages/*
