image: python:3.7-alpine

stages:
  - build
  - lint
  - test
  - security
  - release


wheels:
  stage: build
  script:
    - pip install poetry==1.0.0a4  # FIXME: need pre-release for export
    - poetry build
    - poetry export -f requirements.txt
    - mkdir artifacts
    - mv dist/* artifacts/packages
    - pip wheel -w artifacts/wheelhouse -r requirements.txt
    - cp artifacts/packages/*.whl artifacts/wheelhouse
  artifacts:
    expire_in: 1 week
    paths:
      - artifacts

black:
  stage: lint
  script:
    - pip install black
    - black src/ tests/ --check

mypy:
  stage: lint
  script:
    - apk --no-cache add --update gcc musl-dev
    - pip install mypy
    - mypy src

coverage:
  stage: lint
  script:
    - pip install artifacts/wheelhouse/*
    - pip install pytest-cov
    - pytest tests/ --cov
  coverage: '/TOTAL.*?(\d{1,3}%)/'

pytest:
  stage: test
  script:
    - pip install artifacts/wheelhouse/*
    - pip install pytest pytest-sugar
    - pytest tests/

safety:
  stage: security
  script:
    - pip install poetry==1.0.0a4  # FIXME: need pre-release for export
    - pip install safety
    - poetry export -f requirements.txt
    - safety check -r requirements.txt

bandit:
  stage: security
  script:
    - pip install bandit
    - bandit -r src

sphinx:
  stage: release
  only:
    - master
  script:
    - pip install artifacts/wheelhouse/*
    - pip install sphinx
    - sphinx-apidoc --no-toc --module-first -o docs/autodoc src/stenotype
    - sphinx-build docs public
  artifacts:
    expire_in: 1 month
    paths:
      - public

upload:
  stage: release
  only:
    - master
  script:
    - pip install poetry
    - poetry publish -u ${PYPI_USER} -p ${PYPI_PASSWORD} artifacts/packages/*
